{
  "address": "0xbA2784a5C42133339EdA4Aad2a44676E440df056",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Fundme_NotOwner",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "msg",
          "type": "uint256"
        }
      ],
      "name": "funded",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToamountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xf2b668c2ad0ad37882b8aecc7d8d467645fc1b900f95e3a8dae293c033e15ffe",
  "receipt": {
    "to": null,
    "from": "0xc16eC1d5701c086Ae477D4EA94A15C03afe9B631",
    "contractAddress": "0xbA2784a5C42133339EdA4Aad2a44676E440df056",
    "transactionIndex": 0,
    "gasUsed": "905176",
    "logsBloom": "0x
    "blockHash": "0xfafe51e74148dfc3fab53b1f15d1b3b8ab09ee756a8f5208a61088adf1f3f71d",
    "transactionHash": "0xf2b668c2ad0ad37882b8aecc7d8d467645fc1b900f95e3a8dae293c033e15ffe",
    "logs": [],
    "blockNumber": 11202200,
    "cumulativeGasUsed": "905176",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x8A753747A1Fa494EC906cE90E9f37563A8AF630e"
  ],
  "numDeployments": 3,
  "solcInputHash": "0a4b96405087e44a5f0366ea006874b8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Fundme_NotOwner\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"msg\",\"type\":\"uint256\"}],\"name\":\"funded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToamountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/fundme.sol\":\"Fundme\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/fundme.sol\":{\"content\":\"pragma solidity ^0.8.5;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\nimport \\\"./priceConverter.sol\\\";\\r\\n\\r\\nerror Fundme_NotOwner();\\r\\n\\r\\ncontract Fundme {\\r\\n    using priceConvert for uint256;\\r\\n    address[] public funders;\\r\\n    uint256 public constant MINIMUM_USD = 20 * 1e18;\\r\\n    mapping(address => uint256) public addressToamountFunded;\\r\\n    address owner;\\r\\n    AggregatorV3Interface public priceFeed;\\r\\n    event funded(address sender, uint256 msg);\\r\\n    modifier checkOwner() {\\r\\n        if (msg.sender != owner) revert Fundme_NotOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor(address priceFeedAddress) {\\r\\n        owner = msg.sender;\\r\\n        priceFeed = AggregatorV3Interface(priceFeedAddress);\\r\\n    }\\r\\n\\r\\n    receive() external payable {\\r\\n        fund();\\r\\n    }\\r\\n\\r\\n    function fund() public payable {\\r\\n        require(\\r\\n            // here msg.value is first param that is defined in getConversion() function and 2nd param will be passed in paranthesis of this function\\r\\n            msg.value.getConversion(priceFeed) >= MINIMUM_USD,\\r\\n            \\\"not sufficient amount please check also\\\"\\r\\n        );\\r\\n\\r\\n        funders.push(msg.sender);\\r\\n        addressToamountFunded[msg.sender] += msg.value;\\r\\n        emit funded(msg.sender, msg.value);\\r\\n    }\\r\\n\\r\\n    function withdraw() public checkOwner {\\r\\n        for (\\r\\n            uint256 funderIndex = 0;\\r\\n            funderIndex < funders.length;\\r\\n            funderIndex = funderIndex++\\r\\n        ) {\\r\\n            addressToamountFunded[funders[funderIndex]] = 0;\\r\\n\\r\\n            funders = new address[](0);\\r\\n\\r\\n            // send ether\\r\\n\\r\\n            (bool status, ) = payable(msg.sender).call{\\r\\n                value: address(this).balance\\r\\n            }(\\\"\\\");\\r\\n\\r\\n            require(status, \\\"transaction failed\\\");\\r\\n        }\\r\\n    }\\r\\n\\r\\n    // if someone send ether to this address then fund function will call automatically by recieve\\r\\n}\\r\\n\",\"keccak256\":\"0xedaefa59253cd903e04c9922d5f4d137677393112fa989d97427af9d2c183ff1\"},\"contracts/priceConverter.sol\":{\"content\":\"pragma solidity ^0.8.7;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\nlibrary priceConvert {\\r\\n    // to get the value of eth in usd  we need to interact with other address\\r\\n    function getPrice(AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        // get address of the conract that give price of eth ==> 0x8A753747A1Fa494EC906cE90E9f37563A8AF630e\\r\\n\\r\\n        (\\r\\n            ,\\r\\n            /*uint80 roundID*/\\r\\n            int256 price, /*uint startedAt*/ /*uint timeStamp*/ /*uint80 answeredInRound*/\\r\\n            ,\\r\\n            ,\\r\\n\\r\\n        ) = priceFeed.latestRoundData();\\r\\n        return uint256(price * 1e10);\\r\\n        // return price of eth lets assume 1200 dollar follower by 18 digit\\r\\n    }\\r\\n\\r\\n    function getConversion(uint256 amounteth, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed); // eprice 1500 dollar followed  by 18 digit\\r\\n        // amount of eth also follwod by 18 zeros\\r\\n        // then multiply price with amout of th\\r\\n        /*3000000000000000000000*1000000000000000000/1000000000000000000\\r\\n        3e+21\\r\\n       \\r\\n \\r\\n        */\\r\\n\\r\\n        uint256 ethUSD = (amounteth * ethPrice) / 1e18;\\r\\n        return ethUSD;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xf8daab165b35fc956dc8d6c43f5098a0cfefb5ae37813b839808872fb2c155db\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5060405162000ff238038062000ff28339818101604052810190610034919061011f565b33600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061014c565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100ec826100c1565b9050919050565b6100fc816100e1565b811461010757600080fd5b50565b600081519050610119816100f3565b92915050565b600060208284031215610135576101346100bc565b5b60006101438482850161010a565b91505092915050565b610e96806200015c6000396000f3fe6080604052600436106100595760003560e01c80632398fa151461006d5780633ccfd60b146100aa5780636b69a592146100c1578063741bef1a146100ec578063b60d428814610117578063dc0d3dff1461012157610068565b366100685761006661015e565b005b600080fd5b34801561007957600080fd5b50610094600480360381019061008f919061077f565b6102d2565b6040516100a191906107c5565b60405180910390f35b3480156100b657600080fd5b506100bf6102ea565b005b3480156100cd57600080fd5b506100d6610527565b6040516100e391906107c5565b60405180910390f35b3480156100f857600080fd5b50610101610534565b60405161010e919061083f565b60405180910390f35b61011f61015e565b005b34801561012d57600080fd5b5061014860048036038101906101439190610886565b61055a565b60405161015591906108c2565b60405180910390f35b6801158e460913d0000061019d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461059990919063ffffffff16565b10156101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029091906109af565b925050819055507fed7d0ddcc17abdb3935a0a23cd93e91b449dfeac7fd0def9f481ed5b37e18c4d33346040516102c8929190610a05565b60405180910390a1565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610371576040517f87b53d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105245760006001600080848154811061039a57610399610a2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561041e5761041d610a5d565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b5060009080519060200190610462929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610abd565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610b1e565b60405180910390fd5b50808061051b90610b3e565b91509050610374565b50565b6801158e460913d0000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061056a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105a5836105d5565b90506000670de0b6b3a764000082866105be9190610b87565b6105c89190610c10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561061e57600080fd5b505afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610cce565b5050509150506402540be4008161066d9190610d49565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074c82610721565b9050919050565b61075c81610741565b811461076757600080fd5b50565b60008135905061077981610753565b92915050565b6000602082840312156107955761079461071c565b5b60006107a38482850161076a565b91505092915050565b6000819050919050565b6107bf816107ac565b82525050565b60006020820190506107da60008301846107b6565b92915050565b6000819050919050565b60006108056108006107fb84610721565b6107e0565b610721565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b610863816107ac565b811461086e57600080fd5b50565b6000813590506108808161085a565b92915050565b60006020828403121561089c5761089b61071c565b5b60006108aa84828501610871565b91505092915050565b6108bc81610741565b82525050565b60006020820190506108d760008301846108b3565b92915050565b600082825260208201905092915050565b7f6e6f742073756666696369656e7420616d6f756e7420706c656173652063686560008201527f636b20616c736f00000000000000000000000000000000000000000000000000602082015250565b600061094a6027836108dd565b9150610955826108ee565b604082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107ac565b91506109c5836107ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fa576109f9610980565b5b828201905092915050565b6000604082019050610a1a60008301856108b3565b610a2760208301846107b6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa7600083610a8c565b9150610ab282610a97565b600082019050919050565b6000610ac882610a9a565b9150819050919050565b7f7472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000610b086012836108dd565b9150610b1382610ad2565b602082019050919050565b60006020820190508181036000830152610b3781610afb565b9050919050565b6000610b49826107ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b7c57610b7b610980565b5b600182019050919050565b6000610b92826107ac565b9150610b9d836107ac565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd657610bd5610980565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1b826107ac565b9150610c26836107ac565b925082610c3657610c35610be1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6081610c41565b8114610c6b57600080fd5b50565b600081519050610c7d81610c57565b92915050565b6000819050919050565b610c9681610c83565b8114610ca157600080fd5b50565b600081519050610cb381610c8d565b92915050565b600081519050610cc88161085a565b92915050565b600080600080600060a08688031215610cea57610ce961071c565b5b6000610cf888828901610c6e565b9550506020610d0988828901610ca4565b9450506040610d1a88828901610cb9565b9350506060610d2b88828901610cb9565b9250506080610d3c88828901610c6e565b9150509295509295909350565b6000610d5482610c83565b9150610d5f83610c83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9e57610d9d610980565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ddb57610dda610980565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1857610e17610980565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5557610e54610980565b5b82820290509291505056fea2646970667358221220f41ca438104af5498ab124b03895a9a3abfed215071f8be0af0ffce31379d9b464736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100595760003560e01c80632398fa151461006d5780633ccfd60b146100aa5780636b69a592146100c1578063741bef1a146100ec578063b60d428814610117578063dc0d3dff1461012157610068565b366100685761006661015e565b005b600080fd5b34801561007957600080fd5b50610094600480360381019061008f919061077f565b6102d2565b6040516100a191906107c5565b60405180910390f35b3480156100b657600080fd5b506100bf6102ea565b005b3480156100cd57600080fd5b506100d6610527565b6040516100e391906107c5565b60405180910390f35b3480156100f857600080fd5b50610101610534565b60405161010e919061083f565b60405180910390f35b61011f61015e565b005b34801561012d57600080fd5b5061014860048036038101906101439190610886565b61055a565b60405161015591906108c2565b60405180910390f35b6801158e460913d0000061019d600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461059990919063ffffffff16565b10156101de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d590610960565b60405180910390fd5b6000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461029091906109af565b925050819055507fed7d0ddcc17abdb3935a0a23cd93e91b449dfeac7fd0def9f481ed5b37e18c4d33346040516102c8929190610a05565b60405180910390a1565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610371576040517f87b53d7100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156105245760006001600080848154811061039a57610399610a2e565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600067ffffffffffffffff81111561041e5761041d610a5d565b5b60405190808252806020026020018201604052801561044c5781602001602082028036833780820191505090505b5060009080519060200190610462929190610675565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048990610abd565b60006040518083038185875af1925050503d80600081146104c6576040519150601f19603f3d011682016040523d82523d6000602084013e6104cb565b606091505b505090508061050f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050690610b1e565b60405180910390fd5b50808061051b90610b3e565b91509050610374565b50565b6801158e460913d0000081565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000818154811061056a57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000806105a5836105d5565b90506000670de0b6b3a764000082866105be9190610b87565b6105c89190610c10565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561061e57600080fd5b505afa158015610632573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106569190610cce565b5050509150506402540be4008161066d9190610d49565b915050919050565b8280548282559060005260206000209081019282156106ee579160200282015b828111156106ed5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610695565b5b5090506106fb91906106ff565b5090565b5b80821115610718576000816000905550600101610700565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061074c82610721565b9050919050565b61075c81610741565b811461076757600080fd5b50565b60008135905061077981610753565b92915050565b6000602082840312156107955761079461071c565b5b60006107a38482850161076a565b91505092915050565b6000819050919050565b6107bf816107ac565b82525050565b60006020820190506107da60008301846107b6565b92915050565b6000819050919050565b60006108056108006107fb84610721565b6107e0565b610721565b9050919050565b6000610817826107ea565b9050919050565b60006108298261080c565b9050919050565b6108398161081e565b82525050565b60006020820190506108546000830184610830565b92915050565b610863816107ac565b811461086e57600080fd5b50565b6000813590506108808161085a565b92915050565b60006020828403121561089c5761089b61071c565b5b60006108aa84828501610871565b91505092915050565b6108bc81610741565b82525050565b60006020820190506108d760008301846108b3565b92915050565b600082825260208201905092915050565b7f6e6f742073756666696369656e7420616d6f756e7420706c656173652063686560008201527f636b20616c736f00000000000000000000000000000000000000000000000000602082015250565b600061094a6027836108dd565b9150610955826108ee565b604082019050919050565b600060208201905081810360008301526109798161093d565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006109ba826107ac565b91506109c5836107ac565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156109fa576109f9610980565b5b828201905092915050565b6000604082019050610a1a60008301856108b3565b610a2760208301846107b6565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610aa7600083610a8c565b9150610ab282610a97565b600082019050919050565b6000610ac882610a9a565b9150819050919050565b7f7472616e73616374696f6e206661696c65640000000000000000000000000000600082015250565b6000610b086012836108dd565b9150610b1382610ad2565b602082019050919050565b60006020820190508181036000830152610b3781610afb565b9050919050565b6000610b49826107ac565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610b7c57610b7b610980565b5b600182019050919050565b6000610b92826107ac565b9150610b9d836107ac565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610bd657610bd5610980565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c1b826107ac565b9150610c26836107ac565b925082610c3657610c35610be1565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c6081610c41565b8114610c6b57600080fd5b50565b600081519050610c7d81610c57565b92915050565b6000819050919050565b610c9681610c83565b8114610ca157600080fd5b50565b600081519050610cb381610c8d565b92915050565b600081519050610cc88161085a565b92915050565b600080600080600060a08688031215610cea57610ce961071c565b5b6000610cf888828901610c6e565b9550506020610d0988828901610ca4565b9450506040610d1a88828901610cb9565b9350506060610d2b88828901610cb9565b9250506080610d3c88828901610c6e565b9150509295509295909350565b6000610d5482610c83565b9150610d5f83610c83565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482116000841360008413161615610d9e57610d9d610980565b5b817f80000000000000000000000000000000000000000000000000000000000000000583126000841260008413161615610ddb57610dda610980565b5b827f80000000000000000000000000000000000000000000000000000000000000000582126000841360008412161615610e1857610e17610980565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0582126000841260008412161615610e5557610e54610980565b5b82820290509291505056fea2646970667358221220f41ca438104af5498ab124b03895a9a3abfed215071f8be0af0ffce31379d9b464736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 57,
        "contract": "contracts/fundme.sol:Fundme",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/fundme.sol:Fundme",
        "label": "addressToamountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68,
        "contract": "contracts/fundme.sol:Fundme",
        "label": "owner",
        "offset": 0,
        "slot": "2",
        "type": "t_address"
      },
      {
        "astId": 71,
        "contract": "contracts/fundme.sol:Fundme",
        "label": "priceFeed",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}